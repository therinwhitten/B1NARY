<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XSerializer</name>
    </assembly>
    <members>
        <member name="M:XSerializer.CustomSerializer`1.IHelper.SetElementPropertyValue(XSerializer.ISerializeOptions,System.Boolean@)">
            <summary>
            Returns whether a property was found for the current element.
            </summary>
        </member>
        <member name="T:XSerializer.DateTimeHandler">
            <summary>
            Provides access to a default instance of <see cref="T:XSerializer.IDateTimeHandler"/>.
            </summary>
        </member>
        <member name="P:XSerializer.DateTimeHandler.Default">
            <summary>
            Gets the default implementation of <see cref="T:XSerializer.IDateTimeHandler"/>.
            </summary>
        </member>
        <member name="T:XSerializer.DefaultDateTimeHandler">
            <summary>
            The default implementation of <see cref="T:XSerializer.IDateTimeHandler"/>. Expects values to be
            in the "yyyy-MM-ddTHH:mm:ss.fffffffK" format.
            </summary>
        </member>
        <member name="M:XSerializer.DefaultDateTimeHandler.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the
            current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.
            </param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.DefaultDateTimeHandler.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:XSerializer.DefaultDateTimeHandler.ParseDateTime(System.String)">
            <summary>
            Parse the given string representation into a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">A string representation of a date time.</param>
            <returns>A <see cref="T:System.DateTime"/> value.</returns>
        </member>
        <member name="M:XSerializer.DefaultDateTimeHandler.ParseDateTimeOffset(System.String)">
            <summary>
            Parse the given string representation into a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">A string representation of a date time.</param>
            <returns>A <see cref="T:System.DateTimeOffset"/> value.</returns>
        </member>
        <member name="T:XSerializer.Encryption.ClearTextEncryptionMechanism">
            <summary>
            An implementation of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> that does
            nothing. The <see cref="M:XSerializer.Encryption.ClearTextEncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)"/> and <see cref="M:XSerializer.Encryption.ClearTextEncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)"/>
            methods both return the value of their parameter.
            </summary>
        </member>
        <member name="M:XSerializer.Encryption.ClearTextEncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Returns the value of <paramref name="text"/>.
            </summary>
            <param name="text">Some text.</param>
            <param name="encryptKey">Ignored.</param>
            <param name="serializationState">Ignored.</param>
            <returns>The value of <paramref name="text"/>.</returns>
        </member>
        <member name="M:XSerializer.Encryption.ClearTextEncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Returns the value of <paramref name="text"/>.
            </summary>
            <param name="text">Some text.</param>
            <param name="encryptKey">Ignored.</param>
            <param name="serializationState">Ignored.</param>
            <returns>The value of <paramref name="text"/>.</returns>
        </member>
        <member name="T:XSerializer.Encryption.EncryptAttribute">
            <summary>
            Indicates that the value of a property should be encrypted or decrypted,
            depending on whether the current serialization operation is configured
            to do so.
            </summary>
        </member>
        <member name="T:XSerializer.Encryption.EncryptionMechanism">
            <summary>
            Provides a means for an application to specify a default instance of
            <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> to be used by XSerializer when encrypting
            or decrypting data.
            </summary>
        </member>
        <member name="P:XSerializer.Encryption.EncryptionMechanism.Current">
            <summary>
            Get or sets the current instance of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>.
            This value is used by XSerializer when encrypting or decrypting data and 
            an <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> is not otherwise specified. The
            default value is an instance of <see cref="T:XSerializer.Encryption.ClearTextEncryptionMechanism"/>.
            If set to null, an instance of <see cref="T:XSerializer.Encryption.ClearTextEncryptionMechanism"/>
            is set instead.
            </summary>
            <remarks>
            Do not change the value of this property while an application is running.
            Set it once at the "beginning" of the application and never again.
            </remarks>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Encrypt(System.String)">
            <summary>
            Encrypts the specified plain text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="plainText">The plain text.</param>
            <returns>The encrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Encrypt(System.String,System.Object)">
            <summary>
            Encrypts the specified plain text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="plainText">The plain text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <returns>The encrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Encrypts the specified plain text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="plainText">The plain text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <param name="serializationState">
            An object that holds an arbitrary value that is passed to one or more
            encrypt operations within a single serialization operation.
            </param>
            <returns>The encrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Decrypt(System.String)">
            <summary>
            Decrypts the specified cipher text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <returns>The decrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Decrypt(System.String,System.Object)">
            <summary>
            Decrypts the specified cipher text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <returns>The decrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Decrypts the specified cipher text using the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/>
            specified by the <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <param name="serializationState">
            An object that holds an arbitrary value that is passed to one or more
            decrypt operations within a single serialization operation.
            </param>
            <returns>The decrypted text.</returns>
        </member>
        <member name="M:XSerializer.Encryption.EncryptionMechanism.GetEncryptionMechanism(XSerializer.ISerializeOptions)">
            <summary>
            Gets the <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> specified by the
            <see cref="P:XSerializer.ISerializeOptions.EncryptionMechanism"/> property of the
            <paramref name="options"/> parameter. If that value is null, then the value specified
            by the static <see cref="P:XSerializer.Encryption.EncryptionMechanism.Current"/> property of the <see cref="T:XSerializer.Encryption.EncryptionMechanism"/>
            class is returned.
            </summary>
        </member>
        <member name="T:XSerializer.Encryption.IEncryptionMechanism">
            <summary>
            Defines an interface for encrypting and decrypting text.
            </summary>
        </member>
        <member name="M:XSerializer.Encryption.IEncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Encrypts the specified plain text.
            </summary>
            <param name="plainText">The plain text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <param name="serializationState">
            An object that holds an arbitrary value that is passed to one or more
            encrypt operations within a single serialization operation.
            </param>
            <returns>The encrypted text.</returns>
            <remarks>
            <para>
            The <see cref="M:XSerializer.Encryption.IEncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)"/> method should be implemented
            in such a way that it treates the value of <paramref name="encryptKey"/> as
            if it were a key to a dictionary. The value of that dictionary should
            contain encryption parameters specific to a particular invocation of the
            <see cref="M:XSerializer.Encryption.IEncryptionMechanism.Encrypt(System.String,System.Object,XSerializer.SerializationState)"/> method. If the value of <paramref name="encryptKey"/>
            is null or unknown, then a default set of encryption parameters should be
            used.
            </para>
            <para>
            Implementations of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> may choose to ignore
            the <paramref name="encryptKey"/> parameter altogether.
            </para>
            </remarks>
        </member>
        <member name="M:XSerializer.Encryption.IEncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)">
            <summary>
            Decrypts the specified cipher text.
            </summary>
            <param name="cipherText">The cipher text.</param>
            <param name="encryptKey">
            An object to used to look up invokation-specific encryption parameters.
            </param>
            <param name="serializationState">
            An object that holds an arbitrary value that is passed to one or more
            decrypt operations within a single serialization operation.
            </param>
            <returns>The decrypted text.</returns>
            <remarks>
            <para>
            The <see cref="M:XSerializer.Encryption.IEncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)"/> method should be implemented
            in such a way that it treates the value of <paramref name="encryptKey"/> as
            if it were a key to a dictionary. The value of that dictionary should
            contain encryption parameters specific to a particular invocation of the
            <see cref="M:XSerializer.Encryption.IEncryptionMechanism.Decrypt(System.String,System.Object,XSerializer.SerializationState)"/> method. If the value of <paramref name="encryptKey"/>
            is null or unknown, then a default set of encryption parameters should be
            used.
            </para>
            <para>
            Implementations of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> may choose to ignore
            the <paramref name="encryptKey"/> parameter altogether.
            </para>
            </remarks>
        </member>
        <member name="T:XSerializer.IDateTimeHandler">
            <summary>
            Represents an object that can parse string representations of date time values.
            </summary>
        </member>
        <member name="M:XSerializer.IDateTimeHandler.ParseDateTime(System.String)">
            <summary>
            Parse the given string representation into a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">A string representation of a date time.</param>
            <returns>A <see cref="T:System.DateTime"/> value.</returns>
        </member>
        <member name="M:XSerializer.IDateTimeHandler.ParseDateTimeOffset(System.String)">
            <summary>
            Parse the given string representation into a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">A string representation of a date time.</param>
            <returns>A <see cref="T:System.DateTimeOffset"/> value.</returns>
        </member>
        <member name="T:XSerializer.IJsonSerializerConfiguration">
            <summary>
            Contains various configuration settings required by instances of <see cref="T:XSerializer.JsonSerializer`1"/>.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.Encoding">
            <summary>
            Gets the <see cref="P:XSerializer.IJsonSerializerConfiguration.Encoding"/> to be used for serialization operations.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.EncryptionMechanism">
            <summary>
            Gets an instance of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> to be used to encrypted properties
            decorated with the <see cref="T:XSerializer.Encryption.EncryptAttribute"/> attribute. If null, those properties
            will not be encryped.d
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.EncryptKey">
            <summary>
            Gets an object to be used to retrieve encryption settings for an encryption operation.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.EncryptRootObject">
            <summary>
            Gets a value indicating whether the root object should be encrypted in its entirety.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.DateTimeHandler">
            <summary>
            Gets an object used to create <see cref="T:System.DateTime"/> values from a string representation.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.MappingsByType">
            <summary>
            Gets a dictionary for type-to-type mappings, where the value type is assignable to the key
            type. This is typically a interface-to-implementation or astract-class-to-inheritor
            relationship, although a concrete-class-to-inheritor relationship is also possible.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.MappingsByProperty">
            <summary>
            Gets a dictionary for property-to-type mappings, where the value type is assignable to
            the key property's type. This is typically a interface-to-implementation or
            astract-class-to-inheritor relationship, although a concrete-class-to-inheritor relationship
            is also possible.
            </summary>
        </member>
        <member name="P:XSerializer.IJsonSerializerConfiguration.ShouldUseAttributeDefinedInInterface">
            <summary>
            Gets a value indicating whether attributes defined on an interface property
            should be considered when retrieving attributes.
            </summary>
        </member>
        <member name="T:XSerializer.IXSerializer">
            <summary>
            An interface suitable for serializing a object of a specific type.
            </summary>
        </member>
        <member name="M:XSerializer.IXSerializer.Serialize(System.Object)">
            <summary>
            Serialize the given object to a string.
            </summary>
            <param name="instance">The object to serialize.</param>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="M:XSerializer.IXSerializer.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.IXSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.IXSerializer.Deserialize(System.String)">
            <summary>
            Deserialize an object from a string.
            </summary>
            <param name="data">A string representation of an object.</param>
            <returns>An object created from the string.</returns>
        </member>
        <member name="M:XSerializer.IXSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:XSerializer.IXSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="textReader">
            A <see cref="T:System.IO.TextReader"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.TextReader"/>.</returns>
        </member>
        <member name="T:XSerializer.JsonArray">
            <summary>
            A representation of a JSON array. Provides an advanced dynamic API as well as a standard
            object API.
            </summary>
        </member>
        <member name="M:XSerializer.JsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonArray"/> class.
            </summary>
        </member>
        <member name="M:XSerializer.JsonArray.#ctor(XSerializer.IDateTimeHandler,XSerializer.Encryption.IEncryptionMechanism,System.Object,XSerializer.SerializationState)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonArray"/> class.
            </summary>
            <param name="dateTimeHandler">The object that determines how date time values are parsed.</param>
            <param name="encryptionMechanism">The object the performs encryption operations.</param>
            <param name="encryptKey">A key optionally used by the encryption mechanism during encryption operations.</param>
            <param name="serializationState">An object optionally used by the encryption mechanism to carry state across multiple encryption operations.</param>
        </member>
        <member name="M:XSerializer.JsonArray.Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:XSerializer.JsonArray"/>.
            </summary>
            <param name="value">The object to be added to the end of the <see cref="T:XSerializer.JsonArray"/>.</param>
        </member>
        <member name="M:XSerializer.JsonArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonArray.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:XSerializer.JsonArray.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>
            Provides implementation for type conversion operations.
            </summary>
            <param name="binder">Provides information about the conversion operation.</param>
            <param name="result">The result of the type conversion operation.</param>
            <returns>
            true if the operation is successful; otherwise, false.
            </returns>
        </member>
        <member name="P:XSerializer.JsonArray.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="P:XSerializer.JsonArray.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:XSerializer.JsonArray"/>.
            </summary>
        </member>
        <member name="M:XSerializer.JsonArray.Clear">
            <summary>
            Removes all items from the <see cref="T:XSerializer.JsonArray"/>.
            </summary>
        </member>
        <member name="M:XSerializer.JsonArray.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:XSerializer.JsonArray"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:XSerializer.JsonArray"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:XSerializer.JsonArray"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonArray.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:XSerializer.JsonArray"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:XSerializer.JsonArray"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:XSerializer.JsonArray.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:XSerializer.JsonArray"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:XSerializer.JsonArray"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:XSerializer.JsonArray"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:XSerializer.JsonArray"/>.
            </returns>
        </member>
        <member name="M:XSerializer.JsonArray.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:XSerializer.JsonArray"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:XSerializer.JsonArray"/>.</param>
        </member>
        <member name="M:XSerializer.JsonArray.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:XSerializer.JsonArray"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:XSerializer.JsonArray"/>.</param>
        </member>
        <member name="M:XSerializer.JsonArray.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:XSerializer.JsonArray"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="P:XSerializer.JsonArray.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:XSerializer.JsonArray"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:XSerializer.JsonArray"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonArray.Decrypt(System.Int32)">
            <summary>
            Decrypts the item at the specified index, changing its value in place.
            </summary>
            <param name="index">The index of the value to decrypt.</param>
            <returns>This instance of <see cref="T:XSerializer.JsonArray"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.Encrypt(System.Int32)">
            <summary>
            Encrypts the item at the specified index, changing its value in place.
            </summary>
            <param name="index">The index of the value to encrypt.</param>
            <returns>This instance of <see cref="T:XSerializer.JsonArray"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.TransformItems``1">
            <summary>
            Convert all of the items in this <see cref="T:XSerializer.JsonArray"/> to the type specified by
            the <typeparamref name="T"/> generic argument.
            </summary>
            <typeparam name="T">The type to convert items to.</typeparam>
            <returns>This instance of <see cref="T:XSerializer.JsonArray"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.TransformItems(System.Type)">
            <summary>
            Convert all of the items in this <see cref="T:XSerializer.JsonArray"/> to the type specified by
            the <paramref name="type"/> parameter.
            </summary>
            <param name="type">The type to convert items to.</param>
            <returns>This instance of <see cref="T:XSerializer.JsonArray"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Collections.Generic.List{System.Object}">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Object"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Object[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an object array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~XSerializer.JsonObject[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:XSerializer.JsonObject"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~XSerializer.JsonArray[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:XSerializer.JsonArray"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.String[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.String"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.DateTime[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.DateTime"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.DateTime}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.DateTime"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.DateTimeOffset[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.DateTimeOffset"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.DateTimeOffset}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.DateTimeOffset"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Guid[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Guid"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Guid}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Guid"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Boolean[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Boolean"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Boolean}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Byte[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Byte"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Byte}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Byte"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.SByte[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.SByte"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.SByte}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.SByte"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Int16[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Int16"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Int16}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Int16"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.UInt16[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.UInt16"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.UInt16}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.UInt16"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Int32[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Int32"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Int32}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Int32"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.UInt32[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.UInt32"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.UInt32}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.UInt32"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Int64[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Int64"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Int64}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Int64"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.UInt64[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.UInt64"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.UInt64}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.UInt64"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Single[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Single"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Single}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Single"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Double[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Double"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Double}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Double"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Decimal[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to a <see cref="T:System.Decimal"/> array.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.op_Implicit(XSerializer.JsonArray)~System.Nullable{System.Decimal}[]">
            <summary>
            Defines an implicit conversion of a <see cref="T:XSerializer.JsonArray"/> object to an array of nullable <see cref="T:System.Decimal"/>.
            </summary>
            <param name="jsonArray">The object to convert.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="M:XSerializer.JsonArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:XSerializer.JsonConstructorAttribute">
            <summary>
            Instructs the <see cref="T:XSerializer.JsonSerializer`1"/> to use the decorated constructor.
            </summary>
        </member>
        <member name="T:XSerializer.JsonIgnoreAttribute">
            <summary>
            Instructs the <see cref="T:XSerializer.JsonSerializer`1"/> not to serialize the decorated property.
            </summary>
        </member>
        <member name="T:XSerializer.JsonMappingAttribute">
            <summary>
            Defines a mapping that instructs the <see cref="T:XSerializer.JsonSerializer`1"/> to use the value of the
            <see cref="P:XSerializer.JsonMappingAttribute.Type"/> property in place of type of the decorated member during deserialization
            operations.
            </summary>
        </member>
        <member name="M:XSerializer.JsonMappingAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonMappingAttribute"/> class.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to use in place of the type of the decorated member.</param>
        </member>
        <member name="P:XSerializer.JsonMappingAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> to use in place of the type of the decorated member.
            </summary>
        </member>
        <member name="T:XSerializer.JsonObject">
            <summary>
            A representation of a JSON object. Provides an advanced dynamic API as well as a standard
            object API.
            </summary>
        </member>
        <member name="M:XSerializer.JsonObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonObject"/> class.
            </summary>
        </member>
        <member name="M:XSerializer.JsonObject.#ctor(XSerializer.IDateTimeHandler,XSerializer.Encryption.IEncryptionMechanism,System.Object,XSerializer.SerializationState)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonObject"/> class.
            </summary>
            <param name="dateTimeHandler">The object that determines how date time values are parsed.</param>
            <param name="encryptionMechanism">The object the performs encryption operations.</param>
            <param name="encryptKey">A key optionally used by the encryption mechanism during encryption operations.</param>
            <param name="serializationState">An object optionally used by the encryption mechanism to carry state across multiple encryption operations.</param>
        </member>
        <member name="M:XSerializer.JsonObject.Add(System.String,System.Object)">
            <summary>
            Add a property to the JSON object.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is null.</exception>
        </member>
        <member name="P:XSerializer.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified property name.
            </summary>
            <param name="name">The name of the property</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">When getting the value, if no property exists with the specified name.</exception>
        </member>
        <member name="M:XSerializer.JsonObject.Decrypt(System.String)">
            <summary>
            Decrypts the specified property, changing its value in place.
            </summary>
            <param name="name">The name of the property to decrypt.</param>
            <returns>This instance of <see cref="T:XSerializer.JsonObject"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonObject.Encrypt(System.String)">
            <summary>
            Encrypts the specified property, changing its value in place.
            </summary>
            <param name="name">The name of the property to encrypt.</param>
            <returns>This instance of <see cref="T:XSerializer.JsonObject"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value of the specified property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="result">
            When this method returns, contains the value of the property, if the name exists; otherwise, null.
            </param>
            <returns>True if the JSON object contains the specified property; otherwise false.</returns>
        </member>
        <member name="M:XSerializer.JsonObject.TrySetValue(System.String,System.Object)">
            <summary>
            Set the value of the specified property.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
            <returns>True if the JSON object contains the specified property; otherwise false.</returns>
        </member>
        <member name="M:XSerializer.JsonObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:XSerializer.JsonObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonObject.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:XSerializer.JsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation.</param>
            <param name="result">The result of the get operation.</param>
            <returns>
            true if the operation is successful; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation.</param>
            <param name="value">The value to set to the member.</param>
            <returns>
            true if the operation is successful; otherwise, false.
            </returns>
        </member>
        <member name="M:XSerializer.JsonObject.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names. 
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="T:XSerializer.JsonPropertyAttribute">
            <summary>
            Instructs the <see cref="T:XSerializer.JsonSerializer`1"/> to serialize the decorated property.
            </summary>
        </member>
        <member name="M:XSerializer.JsonPropertyAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonPropertyAttribute"/> class.
            </summary>
        </member>
        <member name="M:XSerializer.JsonPropertyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonPropertyAttribute"/> class.
            </summary>
            <param name="name">The name of json property.</param>
        </member>
        <member name="P:XSerializer.JsonPropertyAttribute.Name">
            <summary>
            Gets the name of the json property.
            </summary>
        </member>
        <member name="M:XSerializer.JsonReader.ReadContent(System.String)">
            <summary>
            Reads the next non-whitespace node from the stream.
            </summary>
            <returns>true if the next node was read successfully; false if there are no more nodes to read.</returns>
        </member>
        <member name="M:XSerializer.JsonReader.ReadProperties(System.String)">
            <summary>
            Read the properties of a json object. The resulting collection contains the name of each
            property. As the collection is enumerated, for each property name, the reader is positioned
            at the beginning of the property's value. The caller is expected to parse the value, calling
            <see cref="M:XSerializer.JsonReader.Read(System.String)"/> or <see cref="M:XSerializer.JsonReader.ReadContent(System.String)"/> one or more times, before continuing to
            enumerate the collection.
            </summary>
            <param name="path">
            The path to the current object. Used for error reporting.
            </param>
            <exception cref="T:XSerializer.XSerializerException">If the JSON object is malformed.</exception>
        </member>
        <member name="M:XSerializer.JsonReader.Discard(System.String)">
            <summary>
            Read and discard the next content value. If the next content type is <see cref="F:XSerializer.JsonNodeType.OpenObject"/>
            or <see cref="F:XSerializer.JsonNodeType.OpenArray"/>, then the reader will continue to read and discard content until
            the matching <see cref="F:XSerializer.JsonNodeType.CloseObject"/> or <see cref="F:XSerializer.JsonNodeType.CloseArray"/> content type
            is found. For all other content types, no additional reads are made.
            </summary>
        </member>
        <member name="M:XSerializer.JsonReader.PeekContent">
            <summary>
            Reads the next non-whitespace node type without changing the state of the reader. If the
            next node type is whitespace, then all leading whitespace is consumed and discarded. The
            next node type is then returned, again without changing the state of the reader.
            </summary>
            <returns>The next non-whitespace node type in the stream.</returns>
        </member>
        <member name="M:XSerializer.JsonReader.Read(System.String)">
            <summary>
            Reads the next node from the stream.
            </summary>
            <returns>true if the next node was read successfully; false if there are no more nodes to read.</returns>
        </member>
        <member name="T:XSerializer.JsonSerializer">
            <summary>
            A factory class that creates instances of the <see cref="T:XSerializer.IXSerializer"/> interface.
            </summary>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.JsonSerializer`1"/> class is returned from
            each method in this class.
            </remarks>
        </member>
        <member name="M:XSerializer.JsonSerializer.Create(System.Type)">
            <summary>
            Create an instance of <see cref="T:XSerializer.IXSerializer"/> for the given type using a default configuration.
            </summary>
            <param name="type">The type of the object that the serializer will operate on.</param>
            <returns>An instance of <see cref="T:XSerializer.IXSerializer"/>.</returns>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.JsonSerializer`1"/> class of type <paramref name="type"/>
            is returned from this method.
            </remarks>
        </member>
        <member name="M:XSerializer.JsonSerializer.Create(System.Type,XSerializer.IJsonSerializerConfiguration)">
            <summary>
            Create an instance of <see cref="T:XSerializer.IXSerializer"/> for the given type using the specified configuration.
            </summary>
            <param name="type">The type of the object that the serializer will operate on.</param>
            <param name="configuration">The configuration for the serializer.</param>
            <returns>An instance of <see cref="T:XSerializer.IXSerializer"/>.</returns>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.JsonSerializer`1"/> class of type <paramref name="type"/>
            is returned from this method.
            </remarks>
        </member>
        <member name="T:XSerializer.JsonSerializer`1">
            <summary>
            An object used for JSON serializing and deserializing objects of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of object to serialize and deserialize.</typeparam>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonSerializer`1"/> class using a
            default configuration.
            </summary>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.#ctor(XSerializer.IJsonSerializerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonSerializer`1"/> class using the 
            specified configuration.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Serialize(System.Object)">
            <summary>
            Serialize the given object to a string.
            </summary>
            <param name="instance">The object to serialize.</param>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Serialize(`0)">
            <summary>
            Serialize the given object to a JSON string.
            </summary>
            <param name="instance">The object to serialize.</param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as JSON.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Serialize(System.IO.Stream,`0)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as JSON.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as JSON.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Serialize(System.IO.TextWriter,`0)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as JSON.
            </summary>
            <param name="textWriter">The <see cref="T:System.IO.TextWriter"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Deserialize(System.String)">
            <summary>
            Deserialize an object from a JSON string.
            </summary>
            <param name="json">A JSON representation of an object.</param>
            <returns>An object created from the JSON string.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Deserialize(System.String)">
            <summary>
            Deserialize an object from a JSON representation of that object.
            </summary>
            <param name="json">A JSON representation of an object.</param>
            <returns>An object created from the JSON string.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Deserialize(System.IO.Stream)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a JSON representation
            of that object.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a JSON representation
            of that object.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.XSerializer#IXSerializer#Deserialize(System.IO.TextReader)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a JSON representation
            of that object.
            </summary>
            <param name="textReader">
            A <see cref="T:System.IO.TextReader"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.TextReader"/>.</returns>
        </member>
        <member name="M:XSerializer.JsonSerializer`1.Deserialize(System.IO.TextReader)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a JSON representation
            of that object.
            </summary>
            <param name="textReader">
            A <see cref="T:System.IO.TextReader"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.TextReader"/>.</returns>
        </member>
        <member name="T:XSerializer.JsonSerializerConfiguration">
            <summary>
            An implementation of <see cref="T:XSerializer.IJsonSerializerConfiguration"/> with read-write
            properties.
            </summary>
        </member>
        <member name="M:XSerializer.JsonSerializerConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.JsonSerializerConfiguration"/> class.
            </summary>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.Encoding">
            <summary>
            Gets the <see cref="P:XSerializer.IJsonSerializerConfiguration.Encoding"/> to be used for serialization operations.
            </summary>
            <remarks>The default value is <see cref="P:System.Text.Encoding.UTF8"/></remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.EncryptionMechanism">
            <summary>
            Gets an instance of <see cref="T:XSerializer.Encryption.IEncryptionMechanism"/> to be used to encrypted properties
            decorated with the <see cref="T:XSerializer.Encryption.EncryptAttribute"/> attribute. If null, those properties
            will not be encryped.
            </summary>
            <remarks>The default value is null.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.EncryptKey">
            <summary>
            Gets an object to be used to retrieve encryption settings for an encryption operation.
            </summary>
            <remarks>The default value is null.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.EncryptRootObject">
            <summary>
            Gets a value indicating whether the root object should be encrypted in its entirety.
            </summary>
            <remarks>The default value is false.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.DateTimeHandler">
            <summary>
            Gets an object used to create <see cref="T:System.DateTime"/> values from a string representation.
            </summary>
            <remarks>The default value is <see cref="P:XSerializer.DateTimeHandler.Default"/>.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.MappingsByType">
            <summary>
            Gets a dictionary for type-to-type mappings, where the value type is assignable to the key
            type. This is typically a interface-to-implementation or astract-class-to-inheritor
            relationship, although a concrete-class-to-inheritor relationship is also possible.
            </summary>
            <remarks>The default value is a new <see cref="T:System.Collections.Generic.Dictionary`2"/>.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.MappingsByProperty">
            <summary>
            Gets a dictionary for property-to-type mappings, where the value type is assignable to
            the key property's type. This is typically a interface-to-implementation or
            astract-class-to-inheritor relationship, although a concrete-class-to-inheritor relationship
            is also possible.
            </summary>
            <remarks>The default value is a new <see cref="T:System.Collections.Generic.Dictionary`2"/>.</remarks>
        </member>
        <member name="P:XSerializer.JsonSerializerConfiguration.ShouldUseAttributeDefinedInInterface">
            <summary>
            Gets a value indicating whether attributes defined on an interface property
            should be considered when retrieving attributes.
            </summary>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.String,System.Boolean)">
            <summary>
            Redacts the clear-text.
            </summary>
            <param name="clearText">Some clear-text.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="booleanValue"/>.
            </summary>
            <param name="booleanValue">A <see cref="T:System.Boolean"/>.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="dateTimeValue"/>.
            </summary>
            <param name="dateTimeValue">A <see cref="T:System.DateTime"/>.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Nullable{System.DateTimeOffset},System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="dateTimeOffsetValue"/>.
            </summary>
            <param name="dateTimeOffsetValue">A <see cref="T:System.DateTimeOffset"/>.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Nullable{System.TimeSpan},System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="timeSpanValue"/>.
            </summary>
            <param name="timeSpanValue">A <see cref="T:System.TimeSpan"/>.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Nullable{System.Char},System.Boolean,System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="charValue"/>.
            </summary>
            <param name="charValue">The character value.</param>
            <param name="redactEnabled">Whether redaction is currently enabled</param>
            <param name="serializeAsIntegerValue">Whether to serialize as integer value</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.RedactAttribute.Redact(System.Object,System.Boolean)">
            <summary>
            Redacts the string representation of <paramref name="value"/>.
            </summary>
            <param name="value">An object.</param>
            <param name="redactEnabled">Whether redaction is currently enabled.</param>
            <returns>The redacted text.</returns>
        </member>
        <member name="M:XSerializer.SerializationExtensions.MaybeSetIsEncryptionEnabledToTrue(XSerializer.XSerializerXmlTextWriter,XSerializer.Encryption.EncryptAttribute,XSerializer.ISerializeOptions)">
            <summary>
            Maybe sets the <see cref="P:XSerializer.XSerializerXmlTextWriter.IsEncryptionEnabled"/> property of 
            <paramref name="writer"/> to true. Returns true if the value was changed to true, false 
            if it was not changed to true.
            </summary>
        </member>
        <member name="M:XSerializer.SerializationExtensions.MaybeSetIsDecryptionEnabledToTrue(XSerializer.XSerializerXmlReader,XSerializer.Encryption.EncryptAttribute,XSerializer.ISerializeOptions)">
            <summary>
            Maybe sets the <see cref="P:XSerializer.XSerializerXmlTextWriter.IsEncryptionEnabled"/> property of 
            <paramref name="reader"/> to true. Returns true if the value was changed to true, false 
            if it was not changed to true.
            </summary>
        </member>
        <member name="T:XSerializer.SerializationState">
            <summary>
            An object that holds an arbitrary value, to be used by one or more encrypt/decrypt
            operations within a single serialization operation.
            </summary>
        </member>
        <member name="M:XSerializer.SerializationState.Get``1(System.Func{``0})">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="getValue">A function that produces the value. This function will only be executed if this method has never been called before.</param>
            <returns>The value</returns>
        </member>
        <member name="M:XSerializer.Toggler`1.Toggle">
            <summary>
            Set the value if the new value is not equal to the original value.
            Returns whether the value was toggled.
            </summary>
            <returns>True, if the value was toggled, otherwise false.</returns>
        </member>
        <member name="M:XSerializer.Toggler`1.Revert">
            <summary>
            Revert the value if it was previously toggled.
            </summary>
        </member>
        <member name="T:XSerializer.EncryptWritesToggler">
            <summary>
            A <see cref="T:XSerializer.Toggler`1"/> that sets <see cref="P:XSerializer.JsonWriter.EncryptWrites"/> to true
            when <see cref="M:XSerializer.Toggler`1.Toggle"/> is called.
            </summary>
        </member>
        <member name="M:XSerializer.EncryptWritesToggler.#ctor(XSerializer.JsonWriter)">
            <summary>
            Creates an instance of <see cref="T:XSerializer.Toggler`1"/> that sets the <see cref="P:XSerializer.JsonWriter.EncryptWrites"/>
            property of a <see cref="T:XSerializer.JsonWriter"/> to true when <see cref="M:XSerializer.Toggler`1.Toggle"/>
            is called.
            </summary>
            <param name="writer">The <see cref="T:XSerializer.JsonWriter"/> whose <see cref="P:XSerializer.JsonWriter.EncryptWrites"/>
            property is toggled.</param>
        </member>
        <member name="T:XSerializer.DecryptReadsToggler">
            <summary>
            A <see cref="T:XSerializer.Toggler`1"/> that sets <see cref="P:XSerializer.JsonWriter.EncryptWrites"/> to true
            when <see cref="M:XSerializer.Toggler`1.Toggle"/> is called.
            </summary>
        </member>
        <member name="M:XSerializer.DecryptReadsToggler.#ctor(XSerializer.JsonReader,System.String)">
            <summary>
            Creates an instance of <see cref="T:XSerializer.Toggler`1"/> that sets the <see cref="P:XSerializer.JsonReader.DecryptReads"/>
            property of a <see cref="T:XSerializer.JsonReader"/> to true when <see cref="M:XSerializer.Toggler`1.Toggle"/>
            is called.
            </summary>
            <param name="reader">The <see cref="T:XSerializer.JsonReader"/> whose <see cref="P:XSerializer.JsonReader.DecryptReads"/>
            property is toggled.</param>
        </member>
        <member name="T:XSerializer.XmlSerializer">
            <summary>
            A factory class that creates instances of the <see cref="T:XSerializer.IXSerializer"/> interface.
            </summary>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.XmlSerializer`1"/> class is returned from
            each method in this class.
            </remarks>
        </member>
        <member name="M:XSerializer.XmlSerializer.Create(System.Type,System.Type[])">
            <summary>
            Create an instance of <see cref="T:XSerializer.IXSerializer"/> for the given type using a default configuration.
            </summary>
            <param name="type">The type of the object that the serializer will operate on.</param>
            <param name="extraTypes">Extra types that can be serialized.</param>
            <returns>An instance of <see cref="T:XSerializer.IXSerializer"/>.</returns>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.XmlSerializer`1"/> class of type <paramref name="type"/>
            is returned from this method.
            </remarks>
        </member>
        <member name="M:XSerializer.XmlSerializer.Create(System.Type,System.Action{XSerializer.XmlSerializationOptions},System.Type[])">
            <summary>
            Create an instance of <see cref="T:XSerializer.IXSerializer"/> for the given type using a default configuration.
            </summary>
            <param name="type">The type of the object that the serializer will operate on.</param>
            <param name="setOptions">A callback for setting options.</param>
            <param name="extraTypes">Extra types that can be serialized.</param>
            <returns>An instance of <see cref="T:XSerializer.IXSerializer"/>.</returns>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.XmlSerializer`1"/> class of type <paramref name="type"/>
            is returned from this method.
            </remarks>
        </member>
        <member name="M:XSerializer.XmlSerializer.Create(System.Type,XSerializer.XmlSerializationOptions,System.Type[])">
            <summary>
            Create an instance of <see cref="T:XSerializer.IXSerializer"/> for the given type using a default configuration.
            </summary>
            <param name="type">The type of the object that the serializer will operate on.</param>
            <param name="options">Options.</param>
            <param name="extraTypes">Extra types that can be serialized.</param>
            <returns>An instance of <see cref="T:XSerializer.IXSerializer"/>.</returns>
            <remarks>
            An instance of the generic <see cref="T:XSerializer.XmlSerializer`1"/> class of type <paramref name="type"/>
            is returned from this method.
            </remarks>
        </member>
        <member name="T:XSerializer.XmlSerializer`1">
            <summary>
            An object used for XML serializing and deserializing objects of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of object to serialize and deserialize.</typeparam>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.XmlSerializer`1"/> class using a
            default configuration.
            </summary>
            <param name="extraTypes">Extra types that can be serialized.</param>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.#ctor(System.Action{XSerializer.XmlSerializationOptions},System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.XmlSerializer`1"/> class using a
            default configuration.
            </summary>
            <param name="setOptions">A callback for setting options.</param>
            <param name="extraTypes">Extra types that can be serialized.</param>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.#ctor(XSerializer.XmlSerializationOptions,System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.XmlSerializer`1"/> class using a
            default configuration.
            </summary>
            <param name="options">Options.</param>
            <param name="extraTypes">Extra types that can be serialized.</param>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Serialize(`0)">
            <summary>
            Serialize the given object to an XML string.
            </summary>
            <param name="instance">The object to serialize.</param>
            <returns>An XML string representation of the object.</returns>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Serialize(System.IO.Stream,`0)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as XML.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Serialize(System.IO.TextWriter,`0)">
            <summary>
            Serialize the given object to the given <see cref="T:System.IO.Stream"/> as JSON.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to serialize the object to.</param>
            <param name="instance">The object to serialize.</param>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Deserialize(System.String)">
            <summary>
            Deserialize an object from a XML representation of that object.
            </summary>
            <param name="xml">A XML representation of an object.</param>
            <returns>An object created from the XML string.</returns>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a XML representation
            of that object.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="M:XSerializer.XmlSerializer`1.Deserialize(System.IO.TextReader)">
            <summary>
            Deserialize an object from a <see cref="T:System.IO.Stream"/> containing a XML representation
            of that object.
            </summary>
            <param name="reader">
            A <see cref="T:System.IO.TextReader"/> that when read, contains a representation of an object.
            </param>
            <returns>An object created from the <see cref="T:System.IO.TextReader"/>.</returns>
        </member>
        <member name="T:XSerializer.XSerializerException">
            <summary>
            The exception that is thrown by the classes in XSerializer.
            </summary>
        </member>
        <member name="M:XSerializer.XSerializerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.XSerializerException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:XSerializer.XSerializerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:XSerializer.XSerializerException"/> class with a
            specified error message and a reference to the inner exception that is the cause 
            of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="exception">
            The exception that is the cause of the current exception, or a null reference if 
            no inner exception is specified.
            </param>
        </member>
    </members>
</doc>
