<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>OVSXmlSerializer</id>
    <version>3.0.2</version>
    <title>OVSXmlSerializer</title>
    <authors>AnOddDoorKnight</authors>
    <license type="file">LICENSE.txt</license>
    <licenseUrl>https://aka.ms/deprecateLicenseUrl</licenseUrl>
    <readme>Readme.md</readme>
    <projectUrl>https://github.com/AnOddDoorKnight/OVSXmlSerializer</projectUrl>
    <description>Odd's Very Special Xml Serializer is a Xml Serializer that is revolved around smart types; Explicit-type naming if needed.

			The system functions very simply: You put an object inside and it will serialize into a file or such in around 1-2 lines of code. Additionally, is meant to be worked with the `object` or more 'undefined' data that the ordinary XML serializer have difficulty handling, along with simulating reference types via ID.

			Unlike the traditional XML Serializer, this will use the type parameters in the class to automatically differentiate enums and arrays, which will remove the need to mark fields as `[XmlArray]` or `[XmlEnum]`. In place, there are custom serializers that you can insert in the config.</description>
    <releaseNotes>- Will now throw an exception if you try to serialize a non-primitive object as an text attribute.
			- Added ChangableStructure to allow the same backbone of the value, but allowing serialization of structs.
			- All future files written will only write references when needed, instead of always.</releaseNotes>
    <copyright>MIT license</copyright>
    <tags>C# Serialization XML XML-Parsing</tags>
    <repository type="git" url="https://github.com/AnOddDoorKnight/OVSXmlSerializer" />
    <dependencies>
      <group targetFramework=".NETStandard2.0" />
    </dependencies>
  </metadata>
</package>